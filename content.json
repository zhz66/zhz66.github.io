{"meta":{"title":"Step by step up","subtitle":"Road to growth","description":"����һ��С�׽����Ĳ��ͣ����͵���һЩ�������������������Լ�����취��","author":"Peter Zhu","url":"http://yoursite.com","root":"/"},"pages":[{"title":"my_first_page","date":"2019-09-17T11:37:58.000Z","updated":"2020-02-06T08:06:31.866Z","comments":true,"path":"my-first-page/index.html","permalink":"http://yoursite.com/my-first-page/index.html","excerpt":"","text":"*[��֪��дЩʲô]��https://www.cnblogs.com/liugang-vip/p/6337580.html��"}],"posts":[{"title":"cotex-m3 指令学习笔记","slug":"cotex-m3-指令学习笔记(1)","date":"2020-03-08T06:25:49.000Z","updated":"2020-03-08T09:26:36.100Z","comments":true,"path":"2020/03/08/cotex-m3-指令学习笔记(1)/","link":"","permalink":"http://yoursite.com/2020/03/08/cotex-m3-指令学习笔记(1)/","excerpt":"","text":"特殊寄存器概述：特殊寄存器组成 Xpsr说明： 中断组说明： control说明： 通过编程控制寄存器或通过异常来切换操作模式 移动数据指令普通寄存器之间：12MOV R8, R3 MVN R8, R3 （MVN是将R3数据按位取反之后传送给R8） 存储器和寄存器之间：单个数据加载存储：LDR和STR12LDRB Rd, [Rn, #offset] ；LDRH Rd, [Rn, #offset] ；LDR Rd, [Rn, #offset] ；LDRD Rd1,Rd2, [Rn, #offset] STRB Rd, [Rn, #offset] ；STRH Rd, [Rn, #offset] ；STR Rd, [Rn, #offset] ；STRD Rd1,Rd2, [Rn, #offset] 多个数据加载：LDM和STM1234516位命令：LDMIA Rd!,&lt;reg list&gt;；STMIA Rd!,&lt;reg list&gt;32位命令：.W 操作代表32位 Thumb-2指令LDMIA.W Rd(!),&lt;reg list&gt;；LDMDB.W Rd(!),&lt;reg list&gt;；STMIA.W Rd(!),&lt;reg list&gt;；STMDB.W Rd(!),&lt;reg list&gt;；注意： IA是先操作后增加，DB是先减小在操作。 索引前命令和索引后命令示例： 对于R13进行操作：pop和push 对于特殊寄存器进行操作： MRS and MSR。123除非您正在访问APSR，否则只能使用MSR或MRS以特权模式访问其他特殊寄存器MRS R0, PSR ; Read Processor status word into R0 MSR CONTROL, R1 ; Write value of R1 into control register 对于立即数用MOV即可 处理数据指令加减乘除：ADD/ADC,SUB,MUL,DIV 乘除32位指令:SMULL，SMLAL，UMULL，UMLAL 逻辑指令： 移位操作： 跳转指令跳出和调回 跳转注意","categories":[],"tags":[]},{"title":"The road of blog after vicissitudes","slug":"The-road-of-blog-after-vicissitudes","date":"2020-02-25T14:03:48.000Z","updated":"2020-02-25T17:26:15.879Z","comments":true,"path":"2020/02/25/The-road-of-blog-after-vicissitudes/","link":"","permalink":"http://yoursite.com/2020/02/25/The-road-of-blog-after-vicissitudes/","excerpt":"","text":"前言很多同学看到英文的标题就不愿意点进来了，在此解释一下，你们看英文有多难受（类比看到数学就头疼）我在整个建立和使用hexo+github建立博客的时候比你们还难受。此篇博客虽然摘录了其他博客，但是本博主的教程绝对值得一看，可以节省同学们的大量时间。 本文是建立在WINDOS基础上建立的，LINUX系统有些步骤会有些许出入。你们可以专门找LINUX版本的博客，如果没有请发邮件我给我，我去试错。 18说了，下面进入正题，老八秘制小汉堡，便宜实惠还管饱，加油，奥利给！！！！！！！！！！！！ 一、准备工作：你需要做的准备工作有如下几样：安装ssh（WIN10自带），github账号，Github客户端，node.js环境，安装git。首先安装ssh、node.js、gitWIN7安装ssh 1注意一点，在上面教程中，安装默认端口为22的那张图片修改为443，如果没改也不要紧，毕竟这个坑我踩过（明明三个月前22端口还好用，过了个年就完犊子了）。肯定你们都着急去点击安装没仔细看这句话了。 安装node.js安装git 然后进行github准备操作：NO.1，注册github账号并且登录进去，在Github首页右上角头像左侧加号点选择 New repositor。 图片中红色字的意思就是假设你的github账号是ABC，那么仓库名为：ABC.github.io，也就是Owner的名字加上 .github.io 创建好了之后点进去仓库，然后看图1点击红色箭头处，然后找到图2的位置，点击choosetheme看图3，设置完毕后你就可以通过 username.github.io(username为你的用户名访问你的博客了) 下载安装登录你的github账号，然后看图4 二、配置Hexo（命令均在bash里面敲）首先你需要建立一个文件夹，这个文件夹将是你的博客大本营（就是安装HEXO的文件夹）。然后右键选择Git Bash。（如果发现没有请重新安装图4内容）依次输入如下内容并回车。新版node.js自动安装npm，如果提示无npm自行解决吧。。npm install hexo-cli -ghexo init #初始化网站npm installhexo g #生成或 hexo generatehexo s #启动本地服务器 或者 hexo server,这一步之后就可以通过http://localhost:4000 查看了如果你可以查看hexo网页证明你安装成功，如果你遇到了问题core-js@&lt;2.6.8 is no longer maintained.那么点击下面链接点我点我点我相关HEXO命令,等看完最后你在看这个也不迟，心急吃不了热豆腐 安装主题hexo cleangit clone https://github.com/litten/hexo-theme-yilia.git themes/yilia找到根目录_config.yml 文件,打开找到 theme：属性并设置为yiliacd themes/yiliagit pullhexo ghexo s此时查看http://localhost:4000 就有新的主题了，yilia相关配置，这个没怎么配置，不过找到了篇常用的设置，图床部分可以使用它的。yilia，click me 三、配置博客到github上。修改_config.yml文件deploy: type: git repo: git@github.com:ABC/ABC.github.io.git #将ABC换成你自己的用户名即可，两处都要替换 branch: master然后保存退出，在bash里面输入：npm install hexo-deployer-git –save 配置SSHcd ~/.sshssh-keygen -t rsa -C “注册github的邮箱地址” #例如：ssh-keygen -t rsa -C “12345686@qq.com“根据提示操作直到一个奇奇怪怪的形状出现。 然后登陆github官网根据图片操作即可。百度搜索开启查看隐藏文件，最后一张图需要复制的东西在 C:\\Users\\用户名\\ .ssh文件夹下后缀名为.pub的文件中。 然后测试一下，在bash里面输入;ssh -T git@github.com 如果提示timeout，或者22端口不可用，那么就是你没仔细看安装ssh的步骤。不过没关系，还有补救办法。 进入C:\\Users\\用户名\\ .ssh文件夹，然后建立一个config文件，如果不会创建，那么就把文件夹里面已经有的白色文件复制粘贴改个名字。 [看我看我看我！](![5WDV1JNYZZJ@U@GC5RSEHFI.png](https://i.loli.net/2020/02/26/VsKRMNPi6DdEa5q.png)) 邮箱改成注册的github邮箱，为了惩罚你们，自己敲一遍。 最后在bash里面输入：git config –global user.name “随便一个名就行”git config –global user.email “github注册的邮箱” 四、测试进入bash输入hexo n “abc”hexo ghexo d然后浏览器URL打上你的仓库名字即可，例如：ABC.github.io 五、埋一点小坑，如何编写自己的博客？你都看到这了，自己找一找文件尝试改一哈，至于如何编写，放心我还是爱你们的，下面有蛛丝马迹。点我点我点我！，易懂版点我点我点我！，炒鸡易懂版如果你会写博客了，恭喜你，给你一个实用的图床。别点我，我怕疼 附上参考的博客（参考的很多，具体框架和图都是这里盗的，不好意思不写）:https://www.cnblogs.com/jackyroc/p/7681938.html","categories":[],"tags":[]},{"title":"科技论文写作-1","slug":"科技论文写作-1","date":"2020-02-25T13:30:02.000Z","updated":"2020-02-25T13:40:04.780Z","comments":true,"path":"2020/02/25/科技论文写作-1/","link":"","permalink":"http://yoursite.com/2020/02/25/科技论文写作-1/","excerpt":"","text":"论文分类： 学位论文（适合入门打基础看，知网上就行） 期刊论文（省刊和非核心、核心、EI、SCI） 会议论文 （国际会议的论文可以看，曲线救国SCI） 快报 （短小精悍，适合刚火的热点类话题）论文格式：不同论文、不同出版社要求不一致，根据往期的期刊自己掌握即可。一些常识格式：","categories":[],"tags":[]},{"title":"Embeded design class 1","slug":"Embeded-design-class-1","date":"2020-02-24T12:20:12.000Z","updated":"2020-02-25T04:44:56.443Z","comments":true,"path":"2020/02/24/Embeded-design-class-1/","link":"","permalink":"http://yoursite.com/2020/02/24/Embeded-design-class-1/","excerpt":"","text":"嵌入式系统的经典组成 嵌入式处理器，其中ESoC是未来重点的发展芯片 几个常用的嵌入式网站（前三个国内可用）：21IC中国电子网嵌入式开发论坛嵌入式信息-电子工程世界网嵌入式控制技术研究室嵌入式世界网 汽车中的嵌入式系统：六大模块：发动机模块，仪表模块，变速模块，车架模块，转向模块，刹车模块。思考：未来人工智能汽车如何设计？","categories":[],"tags":[]},{"title":"安装Brian2那些事","slug":"安装Brian2那些事","date":"2020-02-23T14:38:40.000Z","updated":"2020-02-23T15:24:39.168Z","comments":true,"path":"2020/02/23/安装Brian2那些事/","link":"","permalink":"http://yoursite.com/2020/02/23/安装Brian2那些事/","excerpt":"","text":"Question1:How to install Brian2? First method: by conda.(由于国内的清华源和中科院源停止更新，所以此方法没试过）。1234567conda install -c conda-forge brian2conda install matplotlib nose ipython jupyterconda install -c brian-team brian2tools``` * Second method: by pip.``` bashpipXXX install (--user) brian2 由于博主安装多个版本pip，例如你的python3.5.X版本的pip是pip3.5， 则上述代码写成：pip3.5 install brian2 Question2:checking other relevant module usually ,you need these module as follows: numpy（科学计算），matplotlib（绘图），cython， scipy（科学计算），norse（单元测试） You can open a terminal and input: pythonXXX import numpy as nm IF： &gt;&gt;&gt;NO Module named numpy You need to install numpy: pipXXX install numpy Especially, when you try to install the module norse you will failed ,Don’t Scared: Click me !!!!!!!!!!!! Or copy down sudo apt install git git clone https://github.com/norse/norse cd norse pipXXX install -e . You must to attention a detail . after e. Question3: How do you deal with the lack of your VMWARE’s store ? approach1：delete somethings，and balabal. approach2 : 打开虚拟机设置，点击硬盘，扩充容量，开机之后进入终端输入以下命令: sudo apt-get install gparted sudo gparted 安装之后你就可以通过gparted扩展分区了，如果你想扩充20G的分区，你需要将 dev/fsda2/下面的swap分区先OFF,右键某一个分区，点击XXX/XX的选项，然后就可以随意滑动分区。 原理就是磁盘从左到右是地址递增的，存储盘块就是连续的地址，你想要多少分区分配多少地址就行。","categories":[],"tags":[]},{"title":"Spiking Notes(1)","slug":"Spiking-Notes-1","date":"2020-02-22T07:48:20.000Z","updated":"2020-02-22T16:56:15.062Z","comments":true,"path":"2020/02/22/Spiking-Notes-1/","link":"","permalink":"http://yoursite.com/2020/02/22/Spiking-Notes-1/","excerpt":"","text":"神经网络模型历史第一代 The first generation is based on McCulloch-Pitts neurons as computational units. These are also referred to as perceptrons or threshold gates.they can only give digital output. In fact they are universal for computations with digital input and output, and every boolean function can be computed by some multilayer perceptron with a single hidden layer.第二代（ANN） The second generation is based on computational units that apply an “activation function” with a continuous set of possible output values to a weighted sum (or polynomial) of the inputs.The second generation can compute certain boolean functions with fewer gates than neural nets from the first generation. In addition, neural nets from the second generation are able to compute functions with analog input and output. Another characteristic feature of this second generation of neural network models is that they support learning algorithms that are based on gradient descent such as backprop.However, at least with regard to fast analog computations by networks of neurons in the cortex, the “firing rate interpretation” itself has become questionable. 第三代（SNN） Many biological neural systems use the timing of single action potentials (or “spikes”) to encode information.A third generation of neuralnetwork models which employ spiking neurons (or “integrate-and-fire neurons”) as computational units. 脉冲神经网络基础知识：1The timing of individual computation steps plays a key role for computations in networks of spiking neurons. 2In the simplest (deterministic) model of a spiking neuron one assumes that a neuron v fires whenever its \"potential\" Pv (which models the electric membrane potential at the \"trigger zone\" of neuron v) reaches a certain threshold ®v. This potential Pv is the sum of so-called excitatory postsynaptic potentials (\"EPSPs\") and inhibitory postsynaptic potentials (\"IPSPs\"), which result from the firing of other neurons u that are connected through a \"synapse\" to neuron v. 3突触前神经元U在s时刻的放电对于t时刻Pv的影响（贡献）由以下算式决定：Wu,v · Qu，v（t-s）。权重Wu，v≥0, Qu,v(t-s)是响应函数。权重Wu，v代表神经元u与v之间突触的效能。 4.历史上第一个正式的SNN模型的要素：有限个数的脉冲神经元集合V；神经元突触集合E（V×V）；一个权重Wu，v ≥0；一个响应函数Qu，v（针对那些属于E并且权重大于0的突触设置的）；一个阈值函数Hv。 5.阈值函数图像: 6.第一个正式的SNN模型中的Pv公式:","categories":[],"tags":[]},{"title":"my_first_article","slug":"my-first-article","date":"2019-09-17T11:36:57.000Z","updated":"2020-02-17T15:41:44.512Z","comments":true,"path":"2019/09/17/my-first-article/","link":"","permalink":"http://yoursite.com/2019/09/17/my-first-article/","excerpt":"","text":"Quick StartCreate a new post1$ hexo new \"My New Post\" More info: 同一个机器安装多个Python3版本，pip共存 Quick StartCreate a new post1$ hexo new \"My New Post\" Quick StartCreate a new post1$ hexo new \"My New Post\"","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2019-09-17T11:20:13.649Z","updated":"2019-09-17T11:20:13.650Z","comments":true,"path":"2019/09/17/hello-world/","link":"","permalink":"http://yoursite.com/2019/09/17/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}